[{"authors":["admin"],"categories":null,"content":"I am a M.Sc. Student of Computational Visualistics at the University of Koblenz-Landau, currently working on my master thesis about hybrid ray tracing using C++ and Vulkan. I am passionate about all things rendering, be it ray tracing, rasterization, visualization. Other interests and skills include computer vision/image processing, 3D math and general programming, using mainly C++. Welcome to my portfolio page, where you can find everything about my projects, my skills and my education.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"author","summary":"I am a M.Sc. Student of Computational Visualistics at the University of Koblenz-Landau, currently working on my master thesis about hybrid ray tracing using C++ and Vulkan. I am passionate about all things rendering, be it ray tracing, rasterization, visualization. Other interests and skills include computer vision/image processing, 3D math and general programming, using mainly C++. Welcome to my portfolio page, where you can find everything about my projects, my skills and my education.","tags":null,"title":"Maximilian Mader","type":"author"},{"authors":null,"categories":null,"content":"","date":1554755768,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554755768,"objectID":"4c5695742822dc2fb29d30d3392ae27f","permalink":"/project/master-thesis/","publishdate":"2019-04-08T22:36:08+02:00","relpermalink":"/project/master-thesis/","section":"project","summary":"Hybrid Ray Tracing with Vulkan and RTX For my master thesis, I'm creating a hybrid renderer which combines traditional rasterization techniques with ray traced effects\rsuch as soft shadows, reflections and ambient occlusion. I'm using Vulkan, C++ and NVIDIAs RTX technology.\r","tags":["C++","Vulkan","RTX","ray tracing","rendering"],"title":"Master Thesis","type":"project"},{"authors":null,"categories":null,"content":"","date":1554669684,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554669684,"objectID":"7f3da77021ce3ee796dd22f03c99dd38","permalink":"/project/volumetric/","publishdate":"2019-04-07T22:41:24+02:00","relpermalink":"/project/volumetric/","section":"project","summary":"Froxel-based real-time volumetric fog We implemented the frustum-aligned voxel-grid based volumetric lighting algorithm presented by Bartlomiej Wronski in [Volumetric Fog and Lighting](https://books.google.de/books?hl=en\u0026lr=\u0026id=30ZOCgAAQBAJ\u0026oi=fnd\u0026pg=PA217\u0026dq=gpu+pro+6+volumetric+wronski\u0026ots=2ZfubWDDFI\u0026sig=P611iciYxczkBTD5LDngvBYPN10\u0026redir_esc=y#v=onepage\u0026q=gpu%20pro%206%20volumetric%20wronski\u0026f=false) (GPU Pro 6). We used OpenGL 4.6 and C++17 and our team consisted of Felix Schr√∂der ([@flx_schroeder](https://twitter.com/flx_schroeder)), Darius Thies and me.\rWe presented our results at the [\"CV-Tag\"](https://userpages.uni-koblenz.de/~cvtag/web/) 2018.\r","tags":[],"title":"Volumetric Lighting","type":"project"},{"authors":null,"categories":null,"content":"","date":1523220454,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1523220454,"objectID":"5422bad1b6217191dce82a407a873c8c","permalink":"/project/opengl-fun/","publishdate":"2018-04-08T22:47:34+02:00","relpermalink":"/project/opengl-fun/","section":"project","summary":"\rModern OpenGL framework for prototyping and small projects\nMy OpenGL framework uses C++17 and OpenGL 4.6 and is used for personal\rand university projects, small demos and experiments. It uses modern\rapproaches to GPU-driven rendering like [AZDO](https://www.slideshare.net/CassEveritt/approaching-zero-driver-overhead), [DSA](https://www.khronos.org/opengl/wiki/Direct_State_Access), [bindless textures](https://www.khronos.org/opengl/wiki/Bindless_Texture) and [indirect multi-draw](https://www.khronos.org/opengl/wiki/Vertex_Rendering#Indirect_rendering) and makes heavy usage of compute shaders and SSBOs.\rIt contains code for model loading, processing, rendering, live-reloading for shaders, easy debugging and a practical and condensed abstraction over OpenGL.\r","tags":[],"title":"OpenGL Playground Project","type":"project"},{"authors":null,"categories":null,"content":"","date":1491684354,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1491684354,"objectID":"2b467fecf180ce05095115361d4cf8d1","permalink":"/project/festungsleuchten/","publishdate":"2017-04-08T22:45:54+02:00","relpermalink":"/project/festungsleuchten/","section":"project","summary":"Interactive Art Installation\nAs a group project in the [working group digital media](https://userpages.uni-koblenz.de/~digitalmedia/) at the University of Koblenz\rwe created an interactive art installation at the [Ehrenbreitstein Fortress Light Festival](http://www.festungsleuchten.de/)\rWe used a Microsoft Kinect v2, Unreal Engine 4, stage technology (DMX) and a multi-projector\rinstallation to project peoples movements as shadows to historic environments, linking the Ehrenbreitstein Fortress as it is today\rto its past interactively.\r","tags":[],"title":"Ehrenbreitstein Fortress Light Festival","type":"project"},{"authors":null,"categories":null,"content":"","date":1460148385,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1460148385,"objectID":"871c4c9028de4984bcee99cd4961d1b7","permalink":"/project/ba-thesis/","publishdate":"2016-04-08T22:46:25+02:00","relpermalink":"/project/ba-thesis/","section":"project","summary":"3D Model-Based Tracking in Augmented Reality using a Particle Filter\nFor my bachelor thesis, I implemented a GPU accelerated 3D model based tracker using C++, OpenGL and CUDA\rwith a Kinect v2 for RGBD data.\rThe focus lied on using previously-scanned 3D models and evaluating different likelihood evaluation methods\rfor selecting the best poses for the particle filter.\r","tags":[],"title":"Bachelor Thesis","type":"project"},{"authors":null,"categories":null,"content":"","date":1428525945,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1428525945,"objectID":"b877d21b0efe47da32af03879752e463","permalink":"/project/cvark/","publishdate":"2015-04-08T22:45:45+02:00","relpermalink":"/project/cvark/","section":"project","summary":"AR-Framework\nIn this group project, we developed the augmented reality framework \"CVARK\" and\rimplemented an AR game. We used C++, OpenGL, CUDA, OpenCV, PhysX.\rMy responsibilty included implementing occlusion and collsion between real-world and virtual objects.\rWe presented our technology and game at the [\"CV-Tag\"](https://userpages.uni-koblenz.de/~cvtag/web/) 2016\rand the [\"Nacht der Technik\"](https://hwk-koblenz.de/presse-medien/termine-veranstaltungen/nacht-der-technik/) 2016.\r","tags":[],"title":"CVARK","type":"project"}]